/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package controller;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.ImageIcon;

/**
 *
 * @author Aurelia
 */
public class TrayController extends javax.swing.JPanel implements KeyListener {

    
    //Image tray = new ImageIcon("images\\basket.png").getImage();
    int x_tray, y_tray;
    /**
     * Creates new form TrayController
     */
    public TrayController() {
        x_tray = 450;
        y_tray = 600;
        //initComponents();
    }
    
    public void paint(Graphics graphics) {
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image tray = toolkit.getImage("image\\basket.png");
        graphics.drawImage(tray, 10, 10, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if(e.getKeyCode() == e.VK_LEFT & x_tray>10) {
            x_tray -= 20;
            repaint();
        }
        if(e.getKeyCode() == e.VK_RIGHT & x_tray<1000) {
            x_tray += 20;
            repaint();
        }
    }
    
    void detectCollision(Rectangle bendaAngkasaHitbox) {
        Rectangle trayHitbox = new Rectangle(x_tray,y_tray,100,65);
        
        if (bendaAngkasaHitbox.intersects(trayHitbox)) {
            UserScore.addScore();
        }
    }
}
